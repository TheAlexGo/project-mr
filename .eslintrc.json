{
    "env": {
        "browser": true,
        "es2021": true
    },
    "plugins": [
        "react",
        "@typescript-eslint"
    ],
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:prettier/recommended",
        "airbnb",
        "airbnb/hooks"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "globals": {
        "JSX": true
    },
    "rules": {
        "import/no-unresolved": 0,
        "react/jsx-filename-extension": [
            2,
            {
                "extensions": [".ts", ".tsx"]
            }
        ],
        "import/extensions": [
            "error",
            "ignorePackages",
            {
                "ts": "never",
                "tsx": "never"
            }
        ],
        "import/no-extraneous-dependencies": [
            2,
            {
                "devDependencies": true
            }
        ],
        // Разрешаем отсутствие дефолтного экспорта
        "import/prefer-default-export": 0,
        // Разрешаем использовать разные определния для компонентов
        "react/function-component-definition": [
            2,
            {
                "namedComponents": "arrow-function",
                "unnamedComponents": "arrow-function"
            }
        ],
        // Отключаем стандартную проверку на уже объявленные переменные в скопе
        "no-shadow": 0,
        // Разрешаем применять spread к пропсам
        "react/jsx-props-no-spreading": [2, {
            "html": "ignore",
            "custom": "ignore",
            "exceptions": [""]
        }],
        // Разрешаем создавать методы класса без использования в них this
        "class-methods-use-this": 0,
        "import/order": [
            1,
            {
                "groups": [
                    "index",
                    "builtin",
                    "external",
                    "internal",
                    ["sibling", "parent"],
                    "object",
                    "type"
                ],
                "pathGroups": [
                    {
                        "pattern": "react",
                        "group": "builtin",
                        "position": "after",
                        "patternOptions": {
                            "matchBase": true
                        }
                    },
                    {
                        "pattern": "*.+(styl|svg)",
                        "group": "type",
                        "position": "after",
                        "patternOptions": {
                            "matchBase": true
                        }
                    }
                ],
                "pathGroupsExcludedImportTypes": ["react"],
                "alphabetize": {
                    "order": "asc"
                },
                "newlines-between": "always"
            }
        ],
        "default-case": 0,
        // Отступы
        "indent": 0, // отключаем. Будем работать через prettier
        "react/jsx-indent": [2, 4],
        "react/jsx-indent-props": [2, 4],
        // Не добавляем запятую у последнего элемента в массиве/объекте
        "comma-dangle": ["error", "never"],
        // Максимальная длина строки
        "max-len": [2, 120],
        "object-curly-newline": 0,
        // После переноса проекта - переосмыслить
        "lines-between-class-members": 0,
        "react/require-default-props": 0,
        "no-unused-vars": 0,
        "react/button-has-type": 0
    },
    "settings": {
        "react": {
            "version": "detect"
        },
        "import/resolver": {
            "node": {
                "paths": ["src"],
                "extensions": [".ts", ".tsx"]
            }
        },
        // указываем пути для внутренних пакетов
        "import/internal-regex": "^@(components|fonts|types|store|languages|services|sb|icons|hooks|layouts|pages).*$"
    }
}
